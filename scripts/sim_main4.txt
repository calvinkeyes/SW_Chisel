            }
        }

        // step the clock
        SW->eval();
		SW->clock = !SW->clock;	
        SW->eval();
        SW->clock = !SW->clock;

        //increment time signal
        contextp->timeInc(1);
    }

    // step through the rest of the array
    for (int j = REF_LENGTH; j < REF_LENGTH+READ_LENGTH; j++) {
        SW->eval();
		SW->clock = !SW->clock;	
        SW->eval();
        SW->clock = !SW->clock;

        //increment time signal
        contextp->timeInc(1);
    }

    // assert done
    assert(true == SW->io_done);
    printf("Test Passed\n");

    // Final model cleanup
    SW->final();

    // Return good completion status
    // Don't use exit() or destructor won't get called
    return 0;
}
